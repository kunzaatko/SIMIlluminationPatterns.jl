var documenterSearchIndex = {"docs":
[{"location":"pages/04_apireference/","page":"API","title":"API","text":"Modules = [ SIMIlluminationPatterns]\nOrder = [:type, :function]","category":"page"},{"location":"pages/04_apireference/#SIMIlluminationPatterns.Harmonic-pages-04_apireference","page":"API","title":"SIMIlluminationPatterns.Harmonic","text":"Harmonic (sinusoidal) illumination pattern in the form\n\n    I(vecr)=1+fracm2cosleft(2π (kₓ(vecr)ₓ + k_y  (vecr)_y) + phiright)\n\nParameters have types Real, Frequency or Length and denote:\n\nm: modulation factor\nν: frequency (\\nu)\nλ: wavelength (\\lambda)\nθ: orientation angle (from the x-axis) (\\theta)\n(kx, ky): wave vector ((k_x k_y) = (sin(θ)  ν   cos(θ)  ν))\n(δx, δy): wavepeak vector ((δ_x δ_y) = (sin(θ)  λ   cos(θ)  λ))\nϕ: phase offset (\\phi)\nΔxy or (Δx, Δy): x-axis and y-axis pixel sizes\n\n\n\n\n\n","category":"type"},{"location":"pages/04_apireference/#SIMIlluminationPatterns.Harmonic2D-pages-04_apireference","page":"API","title":"SIMIlluminationPatterns.Harmonic2D","text":"Harmonic2D(m::Real, θ::Real, ν::Frequency, ϕ::Real)\nHarmonic2D(m::Real, (kx, ky)::Tuple{Frequency,Frequency}, ϕ::Real)\nHarmonic2D(m::Real, θ::Real, λ::Length, ϕ::Real)\nHarmonic2D(m::Real, (δx, δy)::Tuple{Length,Length}, ϕ::Real)\nHarmonic2D(m::Real, θ::Real, λ::Real, ϕ::Real, Δxy::Length)\nHarmonic2D(m::Real, (kx, ky)::Tuple{Real,Real}, ϕ::Real, Δxy::Length)\nHarmonic2D(m::Real, (δx, δy)::Tuple{Length,Length}, ϕ::Real)\nHarmonic2D(m::Real, θ::Real, λ::Real, ϕ::Real, (Δx, Δy)::Tuple{Length,Length})\nHarmonic2D(m::Real, (δx, δy)::Tuple{Real,Real}, ϕ::Real, (Δx, Δy)::Tuple{Length,Length})\n\nHarmonic2D <: IlluminationPattern{2}\n\n\n\n\n\n","category":"type"},{"location":"pages/04_apireference/#SIMIlluminationPatterns.Harmonic3D-pages-04_apireference","page":"API","title":"SIMIlluminationPatterns.Harmonic3D","text":"Harmonic3D <: IlluminationPattern{3}\n\n\n\n\n\n","category":"type"},{"location":"pages/04_apireference/#SIMIlluminationPatterns.IlluminationPattern-pages-04_apireference","page":"API","title":"SIMIlluminationPatterns.IlluminationPattern","text":"Super type for N-dimensional illumation patterns. Any particular illumination pattern is a subtype of this. See the  documentation for IlluminationPattern interface to see how to implement your own illumination pattern subtype.\n\nSee also: Harmonic2D\n\n\n\n\n\n","category":"type"},{"location":"pages/04_apireference/#SIMIlluminationPatterns.IlluminationPatternRealization-pages-04_apireference","page":"API","title":"SIMIlluminationPatterns.IlluminationPatternRealization","text":"Super type for N-dimensional illumination pattern realization. You can fix the pixels sizes (Δxy) and sample the  pattern on your senosor and optical system setup.\n\n\n\n\n\n","category":"type"},{"location":"pages/05_bibliography/#Bibliography","page":"Bibliography","title":"Bibliography","text":"","category":"section"},{"location":"pages/05_bibliography/","page":"Bibliography","title":"Bibliography","text":"E. Mudry, K. Belkebir, J. Girard, J. Savatier, E. Le Moal, C. Nicoletti, M. Allain and A. Sentenac. Structured Illumination Microscopy Using Unknown Speckle Patterns. Nature Photonics 6, 312–315 (2012). Accessed on Jul 8, 2023.\n\n\n\n","category":"page"},{"location":"pages/03_patterns/01_harmonic/#Harmonic-(Sinusoidal)-Illumination-Pattern","page":"Harmonic","title":"Harmonic (Sinusoidal) Illumination Pattern","text":"","category":"section"},{"location":"pages/03_patterns/01_harmonic/","page":"Harmonic","title":"Harmonic","text":"Harmonic","category":"page"},{"location":"pages/03_patterns/01_harmonic/#SIMIlluminationPatterns.Harmonic","page":"Harmonic","title":"SIMIlluminationPatterns.Harmonic","text":"Harmonic (sinusoidal) illumination pattern in the form\n\n    I(vecr)=1+fracm2cosleft(2π (kₓ(vecr)ₓ + k_y  (vecr)_y) + phiright)\n\nParameters have types Real, Frequency or Length and denote:\n\nm: modulation factor\nν: frequency (\\nu)\nλ: wavelength (\\lambda)\nθ: orientation angle (from the x-axis) (\\theta)\n(kx, ky): wave vector ((k_x k_y) = (sin(θ)  ν   cos(θ)  ν))\n(δx, δy): wavepeak vector ((δ_x δ_y) = (sin(θ)  λ   cos(θ)  λ))\nϕ: phase offset (\\phi)\nΔxy or (Δx, Δy): x-axis and y-axis pixel sizes\n\n\n\n\n\n","category":"type"},{"location":"pages/03_patterns/01_harmonic/","page":"Harmonic","title":"Harmonic","text":"Harmonic2D","category":"page"},{"location":"pages/03_patterns/01_harmonic/#SIMIlluminationPatterns.Harmonic2D","page":"Harmonic","title":"SIMIlluminationPatterns.Harmonic2D","text":"Harmonic2D(m::Real, θ::Real, ν::Frequency, ϕ::Real)\nHarmonic2D(m::Real, (kx, ky)::Tuple{Frequency,Frequency}, ϕ::Real)\nHarmonic2D(m::Real, θ::Real, λ::Length, ϕ::Real)\nHarmonic2D(m::Real, (δx, δy)::Tuple{Length,Length}, ϕ::Real)\nHarmonic2D(m::Real, θ::Real, λ::Real, ϕ::Real, Δxy::Length)\nHarmonic2D(m::Real, (kx, ky)::Tuple{Real,Real}, ϕ::Real, Δxy::Length)\nHarmonic2D(m::Real, (δx, δy)::Tuple{Length,Length}, ϕ::Real)\nHarmonic2D(m::Real, θ::Real, λ::Real, ϕ::Real, (Δx, Δy)::Tuple{Length,Length})\nHarmonic2D(m::Real, (δx, δy)::Tuple{Real,Real}, ϕ::Real, (Δx, Δy)::Tuple{Length,Length})\n\nHarmonic2D <: IlluminationPattern{2}\n\n\n\n\n\n","category":"type"},{"location":"pages/03_patterns/01_harmonic/","page":"Harmonic","title":"Harmonic","text":"<!– TODO: Add plots explaining the parameters <12-10-23> –>","category":"page"},{"location":"pages/03_patterns/01_harmonic/","page":"Harmonic","title":"Harmonic","text":"Harmonic3D","category":"page"},{"location":"pages/03_patterns/01_harmonic/#SIMIlluminationPatterns.Harmonic3D","page":"Harmonic","title":"SIMIlluminationPatterns.Harmonic3D","text":"Harmonic3D <: IlluminationPattern{3}\n\n\n\n\n\n","category":"type"},{"location":"pages/02_interface/","page":"General Interface","title":"General Interface","text":"CurrentModule = SIMIlluminationPatterns","category":"page"},{"location":"pages/02_interface/#Unified-IlluminationPattern-Interface","page":"General Interface","title":"Unified IlluminationPattern Interface","text":"","category":"section"},{"location":"pages/02_interface/","page":"General Interface","title":"General Interface","text":"IlluminationPattern","category":"page"},{"location":"pages/02_interface/#SIMIlluminationPatterns.IlluminationPattern","page":"General Interface","title":"SIMIlluminationPatterns.IlluminationPattern","text":"Super type for N-dimensional illumation patterns. Any particular illumination pattern is a subtype of this. See the  documentation for IlluminationPattern interface to see how to implement your own illumination pattern subtype.\n\nSee also: Harmonic2D\n\n\n\n\n\n","category":"type"},{"location":"pages/02_interface/","page":"General Interface","title":"General Interface","text":"IlluminationPatternRealization","category":"page"},{"location":"pages/02_interface/#SIMIlluminationPatterns.IlluminationPatternRealization","page":"General Interface","title":"SIMIlluminationPatterns.IlluminationPatternRealization","text":"Super type for N-dimensional illumination pattern realization. You can fix the pixels sizes (Δxy) and sample the  pattern on your senosor and optical system setup.\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = SIMIlluminationPatterns","category":"page"},{"location":"#SIMIlluminationPatterns.jl","page":"Home","title":"SIMIlluminationPatterns.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Illumination patterns used for the structured illumination pattern super-resolution imaging method","category":"page"},{"location":"#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<!– TODO:  <04-11-23> –>","category":"page"},{"location":"pages/01_theory/#Introduction","page":"Theory","title":"Introduction","text":"","category":"section"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"In the theory of image formation in a linear[1] optical system, we model the data D(vecx) that is sensed by the \"camera\" (be it a CCD, CMOS or a different type of sensor) as","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"    D(vecx) = E(vecx) + η(vecx) = E(vecy) otimes h(vecy vecx) + η(vecx)","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"where otimes is the convolution operation i.e. , E(vecy)[2] denotes the intensity produced by the imaged object at the point vecy, disregarding noise, h(vecy vecx)[3] denotes the point spread function (PSF) at the point vecx, evaluated at vecy which is caused by the light passing through the objective and η(vecx) is the noise term.","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"info: Info\nA package concerned with transfer functions of optical systems including the PSF is  TransferFunctions.jl","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"In the frequency domain (Fourier Transform), due to the convolution theorem of the Fourier Transform, this transforms into","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"    tildeD(vecf) = tildeE(vecf) cdot H(vecf) + N(vecf)","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"where vecf denotes the frequency and tildeD, tildeE, H, called the Optical transfer function (OTF) and N are the Fourier  transforms of D, E, h and η, respectively. A particular property of the OTF of a diffraction limited system is that it has a bounded support, which is a demonstration of the resolution limit. This can be intuited by the fact that frequencies outside of the support vecxi notin mathopsupp(H) are not observed in the sensed data i.e. tildeD(vecxi) = N(vecxi) and thus any two points within distance of the reciprocal of those frequencies 1vecxi are observed as if produced by a single point.","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"In a regular structured illumination microscopy (SIM) set-up, we further assume that the emission is linearly dependent[4] on the illumination intensity","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"    E(vecx) = S(vecx)I(vecx)","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"In the frequency domain, using the convolution theorem as above, we have ","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"    tildeE(vecf) = tildeS(vecf) otimes tildeI(vecf) = int tildeS(vecf - vecxi) cdot tildeI(vecxi)  dvecxi","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"which is useful since the higher frequencies that are outside of the OTF support vecphi notin mathopsupp(H) are now reflected in the sensed data  tildeD as shifted into the support due to the convolution mathopsupp(H) ni vecf = vecphi - vecxi. This is the principle that enables to achieve higher resolution by using SIM (even overcoming the diffraction limit in resolution). The problem at hand is to recognize and separate the frequencies that are in-mixed in the sensed data tildeD and move them to the correct places that they represent in the structure tildeS.","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"There are methods to induce a known non-linear relationship between the transfer function and the illumination intensity such as saturated structured illumination microscopy, which can enable shifting higher frequencies into the sensed data D(vecx), than is possible to generate by a grating (due to diffraction effects), thus allowing to reach a higher resolution.","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"This package is concerned with I(vecr) in this model. By far the most frequent type of illumination pattern used in SIM is the harmonic also called sinusoidal. Another type that is not yet implemented in this package the random speckle pattern used in, so called, blind SIM [1].","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"[1]: A linear assumption is often necessary for any analysis, but it is approximately true for most optical systems","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"[2]: \"E\" can stand for emission which is relevant for imaging \"emitted\" light, i.e. fluorescence microscopy","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"[3]: For an aplanic system, we can drop the parameter of the PSF since every point in one focal plane is considered to have   the same PSF, i.e. h(vecy vecx) = h(vecy). This can be either a good or a bad approximation   depending on the optical setup.","category":"page"},{"location":"pages/01_theory/","page":"Theory","title":"Theory","text":"[4]: In fluorescence microscopy, the linearity of the relation is determined by the linearity of the relation between   excitation and emission of the used fluorescent probes","category":"page"}]
}
